
use "debug"
use "../primitives"
use "../utilities"
use ".."

class ConnAckPacket
"""
ConnAckPacket represents a ConnACK message from the Broker. It is receive only so it is 
never generated by the client.
The purpose of this class is to interpret a ConnAck packet and hide the internal
workings of interpretation from the router

CONNACK Packet
Fixed Header 
B0  - Control Byte = 2
B1  - Remaining Length = 2

Variable Header
B2  - Connect Acknowledge Flags (Only Bit 0 is used: 1 = session present)
B3  - Connect Return Code 

""""""

let _connackPacketLength : USize = 4
let _sessionPresentByte : USize = 2
let _returnCodeByte : USize = 3

var _returnCode : U8 =0
var _isValid : Bool = false  // true if we have a valid packet
var _isSessionAccepted : Bool = false
var _isSessionPresent: Bool = false


  new create (basePacket : BasePacket val) =>

   if (basePacket.isNotValid()) then  
      Debug.err("Invalid data passed to ConnAckpacket is not valid")
      return
    end    

    if (basePacket.isNotA(ControlConnAck)) then
      Debug.err("Wrong packet type passed to ConnAckpacket")
      return
    end  

    try
      _returnCode = basePacket.data()(_returnCodeByte)?
      _isSessionAccepted = (_returnCode == ConnAckAccepted())
      _isSessionPresent = ((basePacket.data()(_sessionPresentByte)? and 0b00000001) ==1)
      _isValid = true
    else
      Debug.err("Couldn't read return code in ConAckPacket")
       return
    end 
       
    if (_isValid and (not _isSessionAccepted)) then 
      Debug.err("Return code = " + _returnCode.string() + " Present = " + _isSessionPresent.string() + "  " + RejectionCode(_returnCode) + " at " + __loc.file() + ":" +__loc.method_name())
      Debug.err(basePacket.data())
      Debug.err("at " + __loc.file() + ":" +__loc.method_name() + " line")
  
    end
     
  fun sessionAccepted() : Bool => _isSessionAccepted

  fun sessionPresent() : Bool => _isSessionPresent

  fun returnCode() : ConnAckReturnCode =>
    match _returnCode
    | ConnAckRefusedProtocolVersion() => ConnAckRefusedProtocolVersion
    | ConnAckRefusedIdentifierRejected() => ConnAckRefusedIdentifierRejected
    | ConnAckRefusedServerUnavailable() => ConnAckRefusedServerUnavailable
    | ConnAckRefusedBadUserNameOrPassword() => ConnAckRefusedBadUserNameOrPassword
    | ConnAckRefusedNotAuthorised() => ConnAckRefusedNotAuthorised
    else
    ConnAckAccepted   
    end

  
